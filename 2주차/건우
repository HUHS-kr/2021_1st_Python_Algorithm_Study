그리디(Greedy) 알고리즘: 현재 상황에서 지금 당장 좋은 것만 고르는 방법 -> 최적의 해를 찾기 위해 정렬, 최단 경로 알고리즘 등을 이용

예시:거스름돈)
* 거스름돈으로 사용할 500원, 100원, 50원, 10원이 무한히 존재한다고 가정할 때, 거슬러 줘야 할 돈이 N원일 때 동전의 최대 개수는? (단, N은 항상 10의 배수)

해결법>> 가장 큰 화폐 단위부터 거슬러 줌.
ex) N=1160 일때, 500*2 + 100*1 + 50*1 + 10*1 이므로 5개가 필요함.

>>
n=1160
count=0

coin_types=[500,100,50,10]

for coin in coin_types:
    count += n // coin
    n %= coin
    
print(count)
<<


그리디 알고리즘의 정당성: 대부분의 문제는 그리디를 사용했을 때 최적의 해가 나오지 않을 확률이 큼. 따라서 아이디어가 '정당한지' 먼저 판단하고 해결해야 함. 


