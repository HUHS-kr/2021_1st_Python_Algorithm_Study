구현(implementation): 생각한 알고리즘을 소스코드로 바꾸는 과정

구현 유형의 문제 - '풀이는 쉽지만 소스코드로 옮기기 어려운 문제'
ex) 특정 소수점 자리까지 출력해야 하는 문제, 문자열이 입력으로 주어졌을 때 한 문자 단위로 끊어서 리스트에 넣어야 하는 문제

*완전탐색: 모든 경우의 수를 다 계산하는 해결 방법
*시뮬레이션: 문제에서 제시한 알고리즘을 한 단계씩 직접 수행하는 문제

파이썬에서 리스트를 이용해야 할 때 메모리 제한 고려!

[문제: 상하좌우]
이동횟수가 N번인 경우 시간 복잡도는 O(N)

>> 
n= int(input())
x,y = 1,1
plans= input().split()

#이동방향
dx=[0,0,-1,1]
dy=[-1,1,0,0]
move_types = ['L','R','D','U']

for plan in plans:
  for i in range(len(move_types)):
    if plan == move_types[i]:
      nx = x + dx[i]
      ny = y + dy[i]
    if nx<1 or ny<1 or nx>n or ny>n:
      continue
    x,y=nx,ny
    
print(x,y)


