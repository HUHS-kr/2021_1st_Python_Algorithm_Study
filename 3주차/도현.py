#이 책에서는 완전탐색, 시뮬레이션 유형을 모두 '구현'유형으로 묶어서 다루고 있다.
#완전탐색은 모든 경우의 수를 주저 없이 다 계산하는 해결방법이고,
#시뮬레이션은 문제에서 제시한 알고리즘을 한 단계씩 차례대로 직접 수행해야하는 유형을 의미한다.

#2020년 기준 파이썬3.7로 코드를 작성할 때 자신의 코드가 1초에 2,000만 번의 연산을 수행한다고 가정하면 된다.
#예를들어서 데이터 개수가 100만개인 문제가 있다면 일반적으로 O(NlogN)이내의 알고리즘을 사용해야한다.
#N이 100만일때 NlogN은 2,000만이기 때문이다.
#이렇게 자신의 코드의 시간 복잡도를 미리 생각하는 것이 좋다.

#시각 문제는 데이터 개수를 미리 알고 있다면 바로 완전탐색으로 넘어갈 수 있다.
#확인해야할 전체 개수가 86400가지라는 것을 알기 때문이다.
#일반적으로 탐색해야할 전체 데이터수가 100만개 이하일 때 완전탐색을 사용하면 적절하다.
n = int(input())
count = 0

for i in range(n+1):
    for j in range(60):
        for k in range(60):
            if('3' in str(i) + str(j) + str(k)):
                count += 1

print(count)

#여기서 시간복잡도는 n에 대해서 60*60*(n+1) 만큼 진행이되니 O(N), 즉 선형시간복잡도이다.
