완전 탐백 : 모든 경우의 수를 다 계산
시뮬레이션 : 문제에서 제시한 알고리즘을 한 단계씩 차례대로 직접 수행

C/C++
int 4바이트
long long 8바이트
BigInteger 클래스 (가변적)

파이썬
자료형 지정 불필요

리스트 길이
1000 = 약 4KB
1000000 = 약 4MB
10000000 = 약 40MB

1초에 2천만번 연산 가정


[문제 풀이]
#07 럭키 스트레이트
1. 정수 N의 자릿수 k를 계산한다.
2. N % 10을 sum1에 더하고 N을 10으로 나눈다. k/2번 반복한다.
3. N % 10을 sum2에 더하고 N을 10으로 나눈다. k/2번 반복한다.
4. sum1과 sum2가 같으면 'LUCKY', 다르면 'READY'를 출력한다.

#08 문자열 재정렬
(알파벳은 27개이고, 문자열의 최대 길이는 10000이므로 최대 연산 횟수는 약 30만번 정도로 제한 시간을 넘지 않는다.)
1. 문자열 S에서 알파벳 A를 찾을 때마다 출력한다.
2. 1의 과정을 알파벳 Z까지 반복한다.
3. 문자열 S에서 숫자를 찾을 때마다 sum에 더한다.
4. sum을 출력한다.
