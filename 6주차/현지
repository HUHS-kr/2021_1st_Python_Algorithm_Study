< 이진 탐색>

# 순차 탐색 : 특정 테이터를 찾기 위해 데이터를 하나씩 차례대로 확인
  - 시간 복잡도 : O(N)
  - count() 메서드를 이용할 때에도 내부에서 순차 탐색 수행
  
# 이진 탐색 : 찾으려는 데이터와 중간점 위치에 있는 데이터를 반복적으로 비교해서 원하는 데이터를 찾음
  - 시간 복잡도 : O(logN)
  - 재귀 함수 or 반복문 사용
  - ex) 10개의 데이터 중 값이 4인 원소 찾기
    1. 시작점 [0], 끝점 [9], 중간점 [4]
    2. 중간점 데이터가 찾으려는 데이터보다 큼 -> 중간점 이후의 값은 볼 필요 x -> 끝점은 [3]으로 바뀜
    3. 시작점 [0], 끝점 [3], 중간점 [2]인 상황 -> 중간점에 위치한 데이터 2는 찾고자 하는 값인 4보다 작음
       -> 시작점 [2]로 변경
    4. 시작점 [2], 끝점 [3], 중간점 [2] -> 중간점에 위치한 4는 찾고자 하는 데이터 4와 동일 -> 탐색 종료
    
  
# 트리 자료구조 : 노드와 노드의 연결로 표현
 *노드 : 어떠한 정보를 가지고 있는 개체
  - 트리는 부모 노드와 자식 노드의 관계로 표현됨

# 이진 탐색 트리 : 왼쪽 자식 노드 < 부모 노드 < 오른쪽 자식 노드

  
  
  
