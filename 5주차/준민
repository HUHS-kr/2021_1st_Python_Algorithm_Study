- 선택 정렬: '가장 작은 것을 선택해 앞으로 보냄'
O(N^2) N개를 (N + N-1 + N-2 + ... + 1)번 확인
다른 알고리즘에 비해 비효율적

- 삽입 정렬: '이미 정렬된 배열의 적절한 위치에 삽입'
O(N^2) N개를 (1 + 2 + 3 + ... + N-1)번 확인
데이터가 거의 정렬되어 있을 때 유리

- 퀵 정렬: '특정 데이터를 기준으로 그보다 큰 데이터와 작은 데이터를 교환'
가장 보편적인 알고리즘 O(NlogN)
1. 가장 왼쪽부터 '피벗'으로 지정
2. 왼쪽부터 피벗보다 큰 데이터, 오른쪽부터 피벗보다 작은 데이터를 찾고 교환
3. 이때 검색 중 양쪽 위치가 교차하면 작은 데이터와 피벗을 교환
4. 피벗 기준 양쪽 다시 정렬

- 계수 정렬: '새로운 리스트에 정렬 정보를 담음'
특정 조건 부합 시 매우 빠름 O(N+K) (최댓값 K)
1. 정렬할 데이터 범위를 수용하는 크기의 리스트 선언
2. 정렬할 데이터를 인덱스로 하여 리스트에 해당 데이터의 개수 저장
3. 리스트 순서대로 개수만큼 데이터 반복 출력


list sorted(): 파이썬 기본 정렬 라이브러리 (병합 정렬 기반) O(NlogN)
