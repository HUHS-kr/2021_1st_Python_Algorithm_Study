자료구조: 데이터를 표현하고 관리하고 처리하기 위한 구조.
push: 데이터를 삽입.
pop: 데이터를 삭제.
오버플로: 데이터가 이미 가득 찬 상태에서 삽입 연산을 수행할 때.
언더플로: 데이터가 전혀 없는 상태에서 삭제 연산을 수행할 때.
스택: 아래서부터 차곡차곡 박스 쌓기.
큐: deque()라이브러리 사용. 선입선출 구조.
재귀함수: 자기 자신을 다시 호출하는 함수.

#DFS/BFS
DFS: 깊이 우선 탐색. 멀리 있는 노드를 우선으로 탐색.
BFS: 너비 우선 탐색. 가까이 있는 노드부터 탐색.
#얼음 틀의 모양이 주어졌을 때, 생성되는 총 아이스크림의 개수
n,m = map(int, input().split())
graph=[]
for i in range(n):
  graph.append(list(map(int,input())))
 
def dfs(x,y):
  if x <= -1 or x >=n or y <= -1 or y >= m:
    return False
    #범위를 벗어나면 종료
  if graph[x][y] == 0:
    graph[x][y] = 2
    dfs(x-1,y)
    dfs(x,y-1)
    dfs(x+1,y)
    dfs(x,y+1)
    return True
  return False

result=0
for i in range(n):
  for j in range(m):
    if dfs(i,j) == True:
      result += 1
print(result)
